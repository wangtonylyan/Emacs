// Empty
[
    //=============================================================================================
    // Emacs Friendly Keymap
    //=============================================================================================
    { "key": "up",          "command": "-emacs.cursorUp"       },
    { "key": "down",        "command": "-emacs.cursorDown"     },
    { "key": "left",        "command": "-emacs.cursorLeft"     },
    { "key": "right",       "command": "-emacs.cursorRight"    },
    { "key": "ctrl+p",      "command": "-emacs.cursorUp"       },
    { "key": "ctrl+n",      "command": "-emacs.cursorDown"     },
    { "key": "ctrl+b",      "command": "-emacs.cursorLeft"     },
    { "key": "ctrl+f",      "command": "-emacs.cursorRight"    },
    { "key": "alt+v",       "command": "-emacs.cursorPageUp"   },
    { "key": "pageup",      "command": "-emacs.cursorPageUp"   },
    { "key": "ctrl+v",      "command": "-emacs.cursorPageDown" },
    { "key": "pagedown",    "command": "-emacs.cursorPageDown" },
    { "key": "shift+alt+,", "command": "-emacs.cursorTop"      },
    { "key": "shift+alt+.", "command": "-emacs.cursorBottom"   },
    { "key": "home",        "command": "-emacs.cursorHome"     },
    { "key": "end",         "command": "-emacs.cursorEnd"      },
    { "key": "ctrl+space",  "command": "-emacs.enterMarkMode"  },
    { "key": "ctrl+g",      "command": "-emacs.exitMarkMode"   },
    { "key": "ctrl+w",      "command": "-emacs.C-w"            },
    { "key": "alt+w",       "command": "-emacs.M-w"            },
    { "key": "ctrl+y",      "command": "-emacs.C-y"            },
    { "key": "ctrl+x u",    "command": "-emacs.C-x_u"          },
    { "key": "ctrl+/",      "command": "-emacs.C-/"            },
    { "key": "ctrl+j",      "command": "-emacs.C-j"            },
    { "key": "ctrl+m",      "command": "-emacs.C-j"            },

    //=============================================================================================
    // Cursor Movement
    //=============================================================================================
    { "key": "up",              "command": "-cursorUp"           },
    { "key": "down",            "command": "-cursorDown"         },
    { "key": "left",            "command": "-cursorLeft"         },
    { "key": "right",           "command": "-cursorRight"        },
    { "key": "ctrl+home",       "command": "-cursorTop"          },
    { "key": "ctrl+end",        "command": "-cursorBottom"       },
    { "key": "ctrl+shift+home", "command": "-cursorTopSelect"    },
    { "key": "ctrl+shift+end",  "command": "-cursorBottomSelect" },
    { "key": "ctrl+p",      "command": "emacs.cursorUp",       "when": "textInputFocus" },
    { "key": "ctrl+n",      "command": "emacs.cursorDown",     "when": "textInputFocus" },
    { "key": "ctrl+b",      "command": "emacs.cursorLeft",     "when": "textInputFocus" },
    { "key": "ctrl+f",      "command": "emacs.cursorRight",    "when": "textInputFocus" },
    { "key": "alt+v",       "command": "emacs.cursorPageUp",   "when": "textInputFocus && !suggestWidgetVisible" },
    { "key": "ctrl+v",      "command": "emacs.cursorPageDown", "when": "textInputFocus && !suggestWidgetVisible" },
    { "key": "shift+alt+,", "command": "cursorTop",            "when": "textInputFocus" },
    { "key": "shift+alt+.", "command": "cursorBottom",         "when": "textInputFocus" },

    { "key": "up",          "command": "-list.focusUp"       },
    { "key": "down",        "command": "-list.focusDown"     },
    { "key": "pageup",      "command": "-list.focusPageUp"   },
    { "key": "pagedown",    "command": "-list.focusPageDown" },
    { "key": "home",        "command": "-list.focusFirst"    },
    { "key": "end",         "command": "-list.focusLast"     },
    { "key": "ctrl+p",      "command": "list.focusUp",       "when": "listFocus && !inputFocus" },
    { "key": "ctrl+n",      "command": "list.focusDown",     "when": "listFocus && !inputFocus" },
    { "key": "alt+v",       "command": "list.focusPageUp",   "when": "listFocus && !inputFocus" },
    { "key": "ctrl+v",      "command": "list.focusPageDown", "when": "listFocus && !inputFocus" },
    { "key": "shift+alt+,", "command": "list.focusFirst",    "when": "listFocus && !inputFocus" },
    { "key": "shift+alt+.", "command": "list.focusLast",     "when": "listFocus && !inputFocus" },

    { "key": "up",            "command": "-selectPrevSuggestion"     },
    { "key": "ctrl+up",       "command": "-selectPrevSuggestion"     },
    { "key": "down",          "command": "-selectNextSuggestion"     },
    { "key": "ctrl+down",     "command": "-selectNextSuggestion"     },
    { "key": "pageup",        "command": "-selectPrevPageSuggestion" },
    { "key": "ctrl+pageup",   "command": "-selectPrevPageSuggestion" },
    { "key": "pagedown",      "command": "-selectNextPageSuggestion" },
    { "key": "ctrl+pagedown", "command": "-selectNextPageSuggestion" },
    { "key": "ctrl+p",        "command": "selectPrevSuggestion",     "when": "textInputFocus && suggestWidgetVisible" },
    { "key": "ctrl+n",        "command": "selectNextSuggestion",     "when": "textInputFocus && suggestWidgetVisible" },
    { "key": "alt+v",         "command": "selectPrevPageSuggestion", "when": "textInputFocus && suggestWidgetVisible" },
    { "key": "ctrl+v",        "command": "selectNextPageSuggestion", "when": "textInputFocus && suggestWidgetVisible" },

    { "key": "ctrl+r",   "command": "-editor.action.previousMatchFindAction" },
    { "key": "shift+f3", "command": "-editor.action.previousMatchFindAction" },
    { "key": "ctrl+s",   "command": "-editor.action.nextMatchFindAction"     },
    { "key": "f3",       "command": "-editor.action.nextMatchFindAction"     },
    { "key": "ctrl+p",   "command": "editor.action.previousMatchFindAction", "when": "findWidgetVisible" },
    { "key": "ctrl+n",   "command": "editor.action.nextMatchFindAction",     "when": "findWidgetVisible" },

    { "key": "up",       "command": "-history.showPrevious" },
    { "key": "alt+up",   "command": "-history.showPrevious" },
    { "key": "down",     "command": "-history.showNext"     },
    { "key": "alt+down", "command": "-history.showNext"     },
    { "key": "alt+p",    "command": "history.showPrevious", "when": "historyNavigationEnabled && historyNavigationWidget" },
    { "key": "alt+n",    "command": "history.showNext",     "when": "historyNavigationEnabled && historyNavigationWidget" },

    { "key": "ctrl+shift+;", "command": "extension.jumpy-word", "when": "editorTextFocus"                      },
    { "key": "Escape",       "command": "extension.jumpy-exit", "when": "editorTextFocus && jumpy.isJumpyMode" },
    { "key": "ctrl+g",       "command": "extension.jumpy-exit", "when": "editorTextFocus && jumpy.isJumpyMode" },

    //=============================================================================================
    // Select, Cut, Copy, Paste, Undo, Redo
    //=============================================================================================
    { "key": "shift+up",         "command": "-cursorUpSelect"            },
    { "key": "ctrl+shift+up",    "command": "-cursorUpSelect"            },
    { "key": "shift+down",       "command": "-cursorDownSelect"          },
    { "key": "ctrl+shift+down",  "command": "-cursorDownSelect"          },
    { "key": "shift+left",       "command": "-cursorLeftSelect"          },
    { "key": "shift+right",      "command": "-cursorRightSelect"         },
    { "key": "ctrl+left",        "command": "-cursorWordStartLeft"       },
    { "key": "ctrl+shift+left",  "command": "-cursorWordStartLeftSelect" },
    { "key": "ctrl+right",       "command": "-cursorWordEndRight"        },
    { "key": "ctrl+shift+right", "command": "-cursorWordEndRightSelect"  },
    { "key": "shift+pageup",     "command": "-cursorPageUpSelect"        },
    { "key": "shift+pagedown",   "command": "-cursorPageDownSelect"      },
    { "key": "ctrl+space",       "command": "emacs.enterMarkMode", "when": "textInputFocus && !isWindows"         },
    { "key": "ctrl+shift+space", "command": "emacs.enterMarkMode", "when": "textInputFocus && isWindows"          },
    { "key": "ctrl+g",           "command": "emacs.exitMarkMode",  "when": "textInputFocus && editorHasSelection" },

    { "key": "ctrl+x",       "command": "-editor.action.clipboardCutAction"   },
    { "key": "shift+delete", "command": "-editor.action.clipboardCutAction"   },
    { "key": "ctrl+c",       "command": "-editor.action.clipboardCopyAction"  },
    { "key": "ctrl+insert",  "command": "-editor.action.clipboardCopyAction"  },
    { "key": "ctrl+v",       "command": "-editor.action.clipboardPasteAction" },
    { "key": "shift+insert", "command": "-editor.action.clipboardPasteAction" },
    { "key": "ctrl+w",       "command": "macros.emacs-C-w",  "when": "textInputFocus && !editorReadonly" },
    { "key": "alt+w",        "command": "macros.emacs-M-w",  "when": "textInputFocus"                    },
    { "key": "ctrl+y",       "command": "macros.emacs-C-y",  "when": "textInputFocus && !editorReadonly" },

    { "key": "ctrl+x",      "command": "-filesExplorer.cut"          },
    { "key": "ctrl+c",      "command": "-filesExplorer.copy"         },
    { "key": "ctrl+v",      "command": "-filesExplorer.paste"        },
    { "key": "shift+alt+f", "command": "-filesExplorer.findInFolder" },
    { "key": "ctrl+w", "command": "filesExplorer.cut",          "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"   },
    { "key": "alt+w",  "command": "filesExplorer.copy",         "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"   },
    { "key": "ctrl+y", "command": "filesExplorer.paste",        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
    { "key": "ctrl+o", "command": "filesExplorer.findInFolder", "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"  },

    { "key": "alt+up",         "command": "-editor.action.moveLinesUpAction"   },
    { "key": "alt+down",       "command": "-editor.action.moveLinesDownAction" },
    { "key": "shift+alt+up",   "command": "-editor.action.copyLinesUpAction"   },
    { "key": "shift+alt+down", "command": "-editor.action.copyLinesDownAction" },
    { "key": "alt+p",          "command": "editor.action.moveLinesUpAction",   "when": "editorTextFocus && !editorReadonly" },
    { "key": "alt+n",          "command": "editor.action.moveLinesDownAction", "when": "editorTextFocus && !editorReadonly" },
    { "key": "shift+alt+p",    "command": "editor.action.copyLinesUpAction",   "when": "editorTextFocus && !editorReadonly" },
    { "key": "shift+alt+n",    "command": "editor.action.copyLinesDownAction", "when": "editorTextFocus && !editorReadonly" },

    { "key": "ctrl+x ctrl+u",             "command": "-editor.action.transformToUppercase" },
    { "key": "ctrl+z",                    "command": "-undo"                               },
    { "key": "ctrl+y",                    "command": "-redo"                               },
    { "key": "ctrl+shift+z",              "command": "-redo"                               },
    { "key": "ctrl+x u",                  "command": "undo", "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+x ctrl+u",             "command": "undo", "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+shift+x u",            "command": "redo", "when": "textInputFocus && !editorReadonly" },
    { "key": "ctrl+shift+x ctrl+shift+u", "command": "redo", "when": "textInputFocus && !editorReadonly" },

    { "key": "backspace"     , "command": "extension.smartBackspace", "when": "editorTextFocus && !editorReadonly && config.hungryDelete.enableSmartBackspace" },
    { "key": "ctrl+backspace", "command": "extension.hungryDelete",   "when": "editorTextFocus && !editorReadonly"                                             },

    //=============================================================================================
    // Open: Quick, File, Folder, View, Editor
    //=============================================================================================
    { "key": "ctrl+p",        "command": "-workbench.action.quickOpen"             },
    { "key": "ctrl+e",        "command": "-workbench.action.quickOpen"             },
    { "key": "ctrl+x ctrl+f", "command": "-workbench.action.quickOpen"             },
    { "key": "ctrl+q",        "command": "-workbench.action.quickOpenView"         },
    { "key": "ctrl+o",        "command": "-workbench.action.files.openFile"        },
    { "key": "ctrl+k ctrl+o", "command": "-workbench.action.files.openFolder"      },
    { "key": "ctrl+o",        "command": "-workbench.action.files.openLocalFile"   },
    { "key": "ctrl+k ctrl+o", "command": "-workbench.action.files.openLocalFolder" },
    { "key": "ctrl+r",        "command": "-workbench.action.openRecent"            },
    { "key": "alt+left",      "command": "-workbench.action.quickInputBack"        },
    { "key": "ctrl+x o",      "command": "workbench.action.quickOpenView"                                                                       },
    { "key": "ctrl+x ctrl+f", "command": "workbench.action.files.openFile"                                                                      },
    { "key": "ctrl+x ctrl+d", "command": "workbench.action.files.openFolder"                                                                    },
    { "key": "ctrl+x ctrl+f", "command": "workbench.action.files.openLocalFile",   "when": "remoteFileDialogVisible && remoteFileDialogVisible" },
    { "key": "ctrl+x ctrl+d", "command": "workbench.action.files.openLocalFolder", "when": "remoteFileDialogVisible && remoteFileDialogVisible" },
    { "key": "ctrl+x ctrl+r", "command": "workbench.action.quickOpenRecent"                                                                     },
    //{ "key": "ctrl+x ctrl+r", "command": "workbench.action.openRecent"                                                                          },

    { "key": "ctrl+p",         "command": "-workbench.action.quickOpenNavigatePrevious"               },
    { "key": "ctrl+n",         "command": "-workbench.action.quickOpenNavigateNext"                   },
    { "key": "ctrl+shift+p",   "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker"   },
    { "key": "ctrl+shift+e",   "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker"   },
    { "key": "ctrl+p",         "command": "-workbench.action.quickOpenNavigateNextInFilePicker"       },
    { "key": "ctrl+e",         "command": "-workbench.action.quickOpenNavigateNextInFilePicker"       },
    { "key": "ctrl+shift+tab", "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker" },
    { "key": "ctrl+tab",       "command": "-workbench.action.quickOpenNavigateNextInEditorPicker"     },
    { "key": "ctrl+shift+q",   "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker"   },
    { "key": "ctrl+q",         "command": "-workbench.action.quickOpenNavigateNextInViewPicker"       },
    { "key": "ctrl+p",         "command": "workbench.action.quickOpenNavigatePrevious", "when": "inQuickOpen" },
    { "key": "ctrl+n",         "command": "workbench.action.quickOpenNavigateNext",     "when": "inQuickOpen" },

    //=============================================================================================
    // Search
    //=============================================================================================
    { "key": "ctrl+f", "command": "-actions.find" },
    { "key": "ctrl+r", "command": "-actions.find" },
    { "key": "ctrl+s", "command": "-actions.find" },
    { "key": "ctrl+o", "command": "actions.find", "when": "editorTextFocus && !findWidgetVisible" },

    { "key": "down",          "command": "-closeFindWidget" },
    { "key": "up",            "command": "-closeFindWidget" },
    { "key": "pageup",        "command": "-closeFindWidget" },
    { "key": "pagedown",      "command": "-closeFindWidget" },
    { "key": "alt+w",         "command": "-closeFindWidget" },
    { "key": "alt+v",         "command": "-closeFindWidget" },
    { "key": "ctrl+v",        "command": "-closeFindWidget" },
    { "key": "ctrl+p",        "command": "-closeFindWidget" },
    { "key": "ctrl+n",        "command": "-closeFindWidget" },
    { "key": "ctrl+y",        "command": "-closeFindWidget" },
    { "key": "ctrl+j",        "command": "-closeFindWidget" },
    { "key": "ctrl+g",        "command": "-closeFindWidget" },
    { "key": "ctrl+x ctrl+o", "command": "-closeFindWidget" },
    { "key": "ctrl+o",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+g",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+b",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+f",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "alt+b",         "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "alt+f",         "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+a",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+e",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "alt+v",         "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },
    { "key": "ctrl+v",        "command": "closeFindWidget", "when": "editorFocus && findWidgetVisible" },

    { "key": "ctrl+f", "command": "-settings.action.search"               },
    { "key": "ctrl+f", "command": "-keybindings.editor.searchKeybindings" },
    { "key": "ctrl+o", "command": "settings.action.search",               "when": "inSettingsEditor" },
    { "key": "ctrl+o", "command": "keybindings.editor.searchKeybindings", "when": "inKeybindings"    },

    { "key": "ctrl+t",       "command": "-workbench.action.showAllSymbols" },
    { "key": "ctrl+o",       "command": "-workbench.action.gotoSymbol"     },
    { "key": "ctrl+shift+o", "command": "-workbench.action.gotoSymbol"     },
    { "key": "ctrl+s",       "command": "workbench.action.gotoSymbol"      },

    //===================================================================================
    // Editor
    //===================================================================================
    { "key": "ctrl+k up",            "command": "-views.moveViewUp"                           },
    { "key": "ctrl+k down",          "command": "-views.moveViewDown"                         },
    { "key": "ctrl+k left",          "command": "-views.moveViewLeft"                         },
    { "key": "ctrl+k right",         "command": "-views.moveViewRight"                        },
    { "key": "ctrl+shift+pageup",    "command": "-workbench.action.moveEditorLeftInGroup"     },
    { "key": "ctrl+shift+pagedown",  "command": "-workbench.action.moveEditorRightInGroup"    },
    { "key": "shift+alt+1",          "command": "-workbench.action.moveEditorToFirstGroup"    },
    { "key": "shift+alt+9",          "command": "-workbench.action.moveEditorToLastGroup"     },
    { "key": "ctrl+alt+right",       "command": "-workbench.action.moveEditorToNextGroup"     },
    { "key": "ctrl+alt+left",        "command": "-workbench.action.moveEditorToPreviousGroup" },
    { "key": "ctrl+k ctrl+p",        "command": "-workbench.action.showAllEditors"            },
    { "key": "ctrl+k ctrl+w",        "command": "-workbench.action.closeAllEditors"           },
    { "key": "ctrl+k ctrl+up",       "command": "-workbench.action.focusAboveGroup"           },
    { "key": "ctrl+k ctrl+down",     "command": "-workbench.action.focusBelowGroup"           },
    { "key": "alt+0",                "command": "-workbench.action.lastEditorInGroup"         },
    { "key": "ctrl+shift+up",        "command": "workbench.action.moveEditorToAboveGroup"     },
    { "key": "ctrl+shift+down",      "command": "workbench.action.moveEditorToBelowGroup"     },
    { "key": "ctrl+shift+left",      "command": "workbench.action.moveEditorToLeftGroup"      },
    { "key": "ctrl+shift+right",     "command": "workbench.action.moveEditorToRightGroup"     },
    { "key": "ctrl+alt+shift+up",    "command": "workbench.action.moveActiveEditorGroupUp"    },
    { "key": "ctrl+alt+shift+down",  "command": "workbench.action.moveActiveEditorGroupDown"  },
    { "key": "ctrl+alt+shift+left",  "command": "workbench.action.moveActiveEditorGroupLeft"  },
    { "key": "ctrl+alt+shift+right", "command": "workbench.action.moveActiveEditorGroupRight" },

    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    //===================================================================================
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "alt+g g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+k s",
        "command": "-workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+alt+d",
        "command": "-extension.downloadSettings"
    },
    {
        "key": "shift+alt+u",
        "command": "-extension.updateSettings"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x ctrl+k",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+x ctrl+z",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+x ctrl+k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "ctrl+x ctrl+b",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+oem_5",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+alt+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+x 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+x 1",
        "command": "-workbench.action.closeEditorsInOtherGroups"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },







    {
        "key": "alt+o",
        "command": "workbench.action.navigateEditorGroups"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+left",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+x z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },

    {
        "key": "ctrl+x o",
        "command": "-workbench.action.navigateEditorGroups"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "alt+s",
        "command": "-markdown.extension.editing.toggleStrikethrough",
        "when": "editorTextFocus && !editorReadonly && !isMac && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-markdown.extension.editing.toggleHeadingUp",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-markdown.extension.editing.toggleHeadingDown",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+x ctrl+n",
        "command": "-workbench.action.newWindow"
    },


    {
        "key": "ctrl+y",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus"
    },

    {
        "key": "ctrl+y",
        "command": "markdown.extension.editing.paste",
        "when": "editorHasSelection && editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+v",
        "command": "-markdown.extension.editing.paste",
        "when": "editorHasSelection && editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },

    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWordTerminalFocus",
        "when": "terminalFocus"
    },

    {
        "key": "alt+w",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "ctrl+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },

    {
        "key": "ctrl+c",
        "command": "-keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "alt+w",
        "command": "problems.action.copy",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-problems.action.copy",
        "when": "problemFocus"
    },
    {
        "key": "alt+w",
        "command": "search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "alt+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "down",
        "command": "-keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "shift+alt+down",
        "command": "-markdown.extension.onCopyLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "shift+alt+up",
        "command": "-markdown.extension.onCopyLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
    },
    {
        "key": "shift+alt+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "shift+alt+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+k p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-search.focus.previousInputBox",
        "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+pagedown",
        "command": "-cursorColumnSelectPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+pageup",
        "command": "-cursorColumnSelectPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },




    {
        "key": "shift+escape",
        "command": "-removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus"
    },
    {
        "key": "ctrl+oem_1",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_1",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },


    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "shift+alt+5",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
        "when": "terminalFocus"
    },

    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNextTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },

    {
        "key": "shift+escape",
        "command": "-workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },

    {
        "key": "ctrl+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "escape",
        "command": "-workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible"
    },
    {
        "key": "shift+f3",
        "command": "-workbench.action.terminal.findPreviousTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "escape",
        "command": "-editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },




    {
        "key": "ctrl+n",
        "command": "-showNextParameterHint",
        "when": "editorTextFocus && parameterHintsVisible"
    },

    {
        "key": "ctrl+n",
        "command": "-selectNextQuickFix",
        "when": "editorFocus && quickFixWidgetVisible"
    },

    {
        "key": "escape",
        "command": "-workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },






    {
        "key": "shift+escape",
        "command": "-hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+oem_period",
        "command": "C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "ctrl+f12",
        "command": "-C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "alt+oem_period",
        "command": "C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "ctrl+f12",
        "command": "-C_Cpp.GoToDeclaration",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "alt+o",
        "command": "-C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "ctrl+alt+f12",
        "command": "-C_Cpp.PeekDeclaration",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "ctrl+alt+f12",
        "command": "-C_Cpp.PeekDeclaration",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },
    {
        "key": "alt+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "alt+c",
        "command": "-markdown.extension.checkTaskList",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+n",
        "command": "-C_Cpp.Navigate",
        "when": "editorTextFocus && editorLangId == 'c'"
    },
    {
        "key": "alt+n",
        "command": "-C_Cpp.Navigate",
        "when": "editorTextFocus && editorLangId == 'cpp'"
    },


    {
        "key": "down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+n",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+down",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+p",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "alt+up",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "shift+escape",
        "command": "-closeParameterHints",
        "when": "editorFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+shift+oem_7",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorTextFocus"
    },
    {
        "key": "up",
        "command": "-notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "up",
        "command": "-workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "down",
        "command": "-notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible"
    },
    {
        "key": "down",
        "command": "-settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "-settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "-workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus"
    },
    {
        "key": "down",
        "command": "-breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "left",
        "command": "-list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "left",
        "command": "-notification.collapse",
        "when": "notificationFocus"
    },
    {
        "key": "right",
        "command": "-list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "right",
        "command": "-notification.expand",
        "when": "notificationFocus"
    },
    {
        "key": "right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+f",
        "command": "-problems.action.focusFilter",
        "when": "problemsViewFocus"
    },


    {
        "key": "ctrl+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+down",
        "command": "-problems.action.focusProblemsFromFilter",
        "when": "problemsFilterFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "shift+up",
        "command": "-list.expandSelectionUp",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "shift+down",
        "command": "-list.expandSelectionDown",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
        "key": "f4",
        "command": "-references-view.next",
        "when": "reference-list.hasResult"
    },
    {
        "key": "shift+f4",
        "command": "-references-view.prev",
        "when": "reference-list.hasResult"
    },
    {
        "key": "ctrl+oem_period",
        "command": "-settings.action.editFocusedSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "enter",
        "command": "-settings.action.focusNextSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "shift+enter",
        "command": "-settings.action.focusPreviousSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "enter",
        "command": "-settings.action.focusSettingsList",
        "when": "inSettingsEditor && settingsTocRowFocus"
    },
    {
        "key": "shift+f9",
        "command": "-settings.action.showContextMenu",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+k m",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+escape",
        "command": "-cancelSelection",
        "when": "editorHasSelection && textInputFocus"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+p",
        "command": "-showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+p",
        "command": "-selectPrevQuickFix",
        "when": "editorFocus && quickFixWidgetVisible"
    },
    {
        "key": "shift+alt+oem_period",
        "command": "-editor.action.autoFix",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-emacs.C-/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+oem_2",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+k d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "ctrl+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "ctrl+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.extension.togglePreviewToSide",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "shift+alt+oem_comma",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "alt+oem_comma",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },

    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_2",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "-editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-java.view.package.copyRelativeFilePath",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.collapseCellContent",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.expandCellContent",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "ctrl+k t",
        "command": "-notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+k ctrl+shift+oem_5",
        "command": "-notebook.cell.split",
        "when": "notebookCellEditable && notebookCellEditorFocused && notebookEditable && notebookEditorFocused && !notebookEditorCursorAtEditorBeginEnd"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-code-runner.runCustomCommand"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "-keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.extension.closePreviewToSide",
        "when": "markdownPreviewFocus"
    },
    {
        "key": "ctrl+k s",
        "command": "-saveAll"
    },
    {
        "key": "ctrl+k f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+oem_1 x",
        "command": "-jupyter.deleteCells",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+x ctrl+l",
        "command": "-editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_1 a",
        "command": "-jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    }
]